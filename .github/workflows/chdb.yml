name: chDB-go

on:
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**/.md'
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/.md'

jobs:
  # build_linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Fetch library
  #     run: |
  #         make install
  #   - name: Set up Go
  #     uses: actions/setup-go@v4
  #     with:
  #       go-version: "1.21"
  #   - name: Build
  #     run: |
  #         go mod tidy
  #         make build
  #   - name: Test
  #     run: make test
  #   - name: Test main
  #     run: ./chdb-go "SELECT 12345"

  build_mac:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v3
    - name: Enable core dump
      run: |
        ulimit -c unlimited
        sudo sysctl -w kern.coredump=1
        sudo sysctl kern.corefile=./core.%P
        sudo chmod 1777 ./
    - name: Fetch library
      run: |
          make install
    # - name: Install libchdb
    #   run: |
    #     sudo mkdir -p /usr/local/lib /usr/local/include
    #     sudo cp ./libchdb.so /usr/local/lib/
    #     sudo cp ./chdb.h /usr/local/include/
    #     sudo chmod +x /usr/local/lib/libchdb.so
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "1.21"
    - name: Build
      run: |
          go mod tidy
          make build
    - name: Test
      run: go test ./chdb-purego -gcflags="all=-N -l" -c -o mytest.test
    - name: Testt
      run: go test ./chdb -gcflags="all=-N -l" -c -o mytest.test2
    - name: Testtt
      run: go test ./chdb/driver -gcflags="all=-N -l" -c -o mytest.test3
    - name: Test2
      run: ulimit -c unlimited && (./mytest.test -test.count 10 --test.v || (lldb -c `ls -t ./core.* | head -n1` --batch -o 'thread backtrace all' -o 'quit' && exit 1))
    # - name: Test3
    #   run: ulimit -c unlimited && (./mytest.test2 -test.count 10 --test.v || (lldb -c `ls -t ./core.* | head -n1` --batch -o 'thread backtrace all' -o 'quit' && exit 1))
    # - name: Test4
    #   run: ulimit -c unlimited && (./mytest.test3 -test.count 10 --test.v || (lldb -c `ls -t ./core.* | head -n1` --batch -o 'thread backtrace all' -o 'quit' && exit 1))
    # - name: Test5
    #   run: ./mytest.test -test.count 10 --test.v || true
    # - name: Test6
    #   run: ./mytest.test2 -test.count 10 --test.v || true
    # - name: Test7
    #   run: ./mytest.test3 -test.count 10 --test.v || true
    # - name: Analyze core dump with GDB
    #   run: |
    #     LATEST_CORE=$(ls -t core.* | head -1)
    #     lldb -c $LATEST_CORE -o "bt" -o "exit"
    # - name: Upload core dump
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: core-dumps
    #     path: core.*
    #     retention-days: 1
    # - name: 运行测试并捕获堆栈
    #   run: |
    #     lldb --batch \
    #     -o "settings set target.process.unwind-on-error-in-expressions false" \
    #     -o "run" \
    #     -o "thread backtrace all" \
    #     -o "quit" \
    #     ./mytest.test -- --test.v > lldb.log 2>&1 || true
    #     cat lldb.log
    - name: Test main
      run: ./chdb-go "SELECT 12345"

